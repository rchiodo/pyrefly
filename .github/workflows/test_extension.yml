name: test_extension
on:
  workflow_dispatch:
  workflow_call:
  push:
    paths:
      - '**/*'
      - '!.*'
      - '.github/workflows/build_extension.yml'
      - '.github/workflows/test_extension.yml'

jobs:
  build_extension:
    uses: ./.github/workflows/build_extension.yml

  test_extension:
    needs: build_extension
    if: success()
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
          - os: windows-latest
            platform: win32
            arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: ubuntu-24.04-arm
            platform: linux
            arch: arm64
          - os: ubuntu-24.04-arm
            platform: linux
            arch: armhf
          - os: ubuntu-latest
            platform: alpine
            arch: x64
          - os: ubuntu-24.04-arm
            platform: alpine
            arch: arm64
          - os: macos-13
            platform: darwin
            arch: x64
          - os: macos-14
            platform: darwin
            arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo (to see version.bzl in next step)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get all history for all branches and tags
      - name: download built vsix
        uses: actions/download-artifact@v4
        with:
          name: pyrefly-${{ matrix.platform }}-${{ matrix.arch }}
      - name: Rename .vsix to .zip
        run: |
            mv *.vsix *.zip
        shell: bash
      - name: Extract .zip file
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            powershell -Command "Expand-Archive -Path *.zip -DestinationPath extracted"
          else
            unzip *.zip -d extracted
          fi
        shell: bash
      - name: Copy extracted files to lsp/bin
        run: |
          mkdir -p lsp/bin && mv extracted/extension/bin/* lsp/bin/
        shell: bash
      # Now run the test
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
      - run: npm ci
        working-directory: lsp/
      - run: npm run compile
        working-directory: lsp/
      - run: xvfb-run -a npm run test
        working-directory: lsp/
        if: runner.os == 'Linux'
      - run: npm run test
        working-directory: lsp/
        if: runner.os != 'Linux'
